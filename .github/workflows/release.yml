name: Create Release

on:
  push:
    branches:
      - main

jobs:
  create:
    name: Create release
    runs-on: ubuntu-latest
    env:
      tag_prefix: nightly-tag-
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      tag_name: ${{ env.tag_prefix }}${{ steps.date.outputs.date }}
    steps:
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y%m%d-%H%M%S')"
      - name: create release
        uses: ncipollo/release-action@v1
        id: create_release
        with:
          token: ${{ secrets.GH_TOKEN }}
          name: Release ${{ steps.date.outputs.date }}
          tag: ${{ env.tag_prefix }}${{ steps.date.outputs.date }}
          commit: ${{ github.sha }}
          draft: true
          allowUpdates: true

  build:
    name: Build & upload release [${{ matrix.os }}]
    runs-on: ${{ matrix.os }}
    needs: create

    strategy:
      matrix:
        os: [windows-latest, macOS-latest]

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        name: Install Node.js
        with:
          node-version: 18

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Get pnpm file path
        shell: bash
        run: |
          PNPM_VERSION=$(pnpm -v)
          echo "PNPM_FILE=\"/c/users/runneradmin/setup-pnpm/node_modules/.pnpm/pnpm@$PNPM_VERSION/node_modules/pnpm/bin/pnpm.cjs\"" >> $GITHUB_ENV

      #TODO - Remove this once https://github.com/electron-userland/electron-builder/issues/6933#issuecomment-1213438889 is resolved
      - name: Tweak pnpm.cjs
        if: matrix.os == 'windows-latest'
        run: sed -i 's/\/usr\/bin\/env node/node/g' ${{env.PNPM_FILE}}
        shell: bash

      - name: Install dependencies
        run: pnpm install

      - name: build macOS
        if: matrix.os == 'macOS-latest'
        run: pnpm run pkg:mac

      - name: build windows
        if: matrix.os == 'windows-latest'
        run: pnpm run pkg:win

      - name: action-zip
        if: matrix.os == 'macOS-latest'
        uses: montudor/action-zip@v1.0.0
        with:
          args: zip -qq -r ./dist/test-pkg-rl.zip ./dist/test-pkg-rl.app

      - name: update release macOS
        if: matrix.os == 'macOS-latest'
        uses: ncipollo/release-action@v1
        id: update_release_macos
        with:
          token: ${{ secrets.GH_TOKEN }}
          tag: ${{ needs.create.outputs.tag_name }}
          allowUpdates: true
          artifacts: "./dist/test-pkg-rl.zip"

      - name: update release window
        if: matrix.os == 'windows-latest'
        uses: ncipollo/release-action@v1
        id: update_release_win
        with:
          token: ${{ secrets.GH_TOKEN }}
          tag: ${{ needs.create.outputs.tag_name }}
          allowUpdates: true
          artifacts: "./dist/test-pkg-rl.exe"
